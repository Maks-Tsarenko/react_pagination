{"version":3,"sources":["components/Pagination/Pagination.tsx","components/ItemsList.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","numberOfPages","useMemo","Math","ceil","handlePageClick","event","preventDefault","pageNumberAttr","target","getAttribute","pageNumbers","Array","from","length","_","i","className","classNames","disabled","href","onClick","map","pageNumber","active","ItemsList","itemsPerPage","item","items","to","numbers","n","push","getNumbers","App","useState","setPerPage","setCurrentPage","firstItem","lastItem","min","slice","paginationInfo","generatePaginationInfo","id","onChange","newPerPage","value","htmlFor","page","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.658da3fc.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { MouseEvent, useMemo } from 'react';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const numberOfPages = useMemo(() => {\n    return Math.ceil(total / perPage);\n  }, [total, perPage]);\n\n  const handlePageClick = (event: MouseEvent) => {\n    event.preventDefault();\n    const target = event.target as HTMLElement;\n    const pageNumberAttr = target.getAttribute('data-page-number');\n    const pageNumber = pageNumberAttr ? +pageNumberAttr : 1;\n\n    onPageChange(pageNumber);\n  };\n\n  const pageNumbers = Array.from({ length: numberOfPages }, (_, i) => i + 1);\n\n  const handlePrevClick = (event: MouseEvent) => {\n    event.preventDefault();\n\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextClick = (event: MouseEvent) => {\n    event.preventDefault();\n\n    if (currentPage !== numberOfPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames('page-item', {\n          disabled: currentPage === 1,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handlePrevClick}\n        >\n          «\n        </a>\n      </li>\n      {pageNumbers.map(pageNumber => (\n        <li\n          key={pageNumber}\n          className={classNames('page-item', {\n            active: currentPage === pageNumber,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pageNumber}`}\n            data-page-number={pageNumber}\n            onClick={handlePageClick}\n          >\n            {pageNumber}\n          </a>\n        </li>\n      ))}\n      <li\n        className={classNames('page-item', {\n          disabled: currentPage === numberOfPages,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === numberOfPages}\n          onClick={handleNextClick}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React from 'react';\n\ntype Props = {\n  itemsPerPage: string[];\n};\n\nexport const ItemsList: React.FC<Props> = ({ itemsPerPage }) => {\n  return (\n    <ul>\n      {itemsPerPage.map((item) => (\n        <li\n          data-cy=\"item\"\n          key={item}\n        >\n          {`${item}`}\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\nimport { ItemsList } from './components/ItemsList';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst generatePaginationInfo = (\n  currentPage: number,\n  firstItem: number,\n  lastItem: number,\n  total: number,\n) => {\n  return `Page ${currentPage} (items ${firstItem} - ${lastItem} of ${total})`;\n};\n\nconst total = 42;\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const firstItem = (currentPage - 1) * perPage + 1;\n  const lastItem = Math.min(currentPage * perPage, total);\n\n  const itemsPerPage = items.slice(firstItem - 1, lastItem);\n  const itemsOnPageSelecting = [3, 5, 10, 20];\n\n  const paginationInfo = generatePaginationInfo(\n    currentPage,\n    firstItem,\n    lastItem,\n    total,\n  );\n\n  const handleChangePerPage = (event: ChangeEvent<HTMLSelectElement>) => {\n    const newPerPage = +event.target.value;\n\n    setPerPage(newPerPage);\n    setCurrentPage(1);\n  };\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {paginationInfo}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleChangePerPage}\n            value={perPage}\n          >\n            {itemsOnPageSelecting.map(item => (\n              <option\n                value={item}\n                key={item}\n              >\n                {item}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n\n      <ItemsList itemsPerPage={itemsPerPage} />\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}