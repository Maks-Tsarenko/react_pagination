{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","numberOfPages","useMemo","Math","ceil","pageItems","items","pageNumber","push","className","classNames","active","href","onClick","event","preventDefault","disabled","from","to","numbers","n","getNumbers","map","App","useState","setPerPage","setCurrentPage","firstItem","lastItem","min","itemsPerPage","slice","paginationInfo","calculatePaginationInfo","id","onChange","newPerPage","target","value","htmlFor","page","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36e0db56.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { MouseEvent, useMemo } from 'react';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const numberOfPages = useMemo(() => {\n    return Math.ceil(total / perPage);\n  }, [total, perPage]);\n\n  const pageItems = useMemo(() => {\n    const items = [];\n\n    for (let pageNumber = 1; pageNumber <= numberOfPages; pageNumber += 1) {\n      const handlePageClick = (event: MouseEvent) => {\n        event.preventDefault();\n        onPageChange(pageNumber);\n      };\n\n      items.push(\n        <li\n          key={pageNumber}\n          className={classNames('page-item', {\n            active: currentPage === pageNumber,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pageNumber}`}\n            onClick={handlePageClick}\n          >\n            {pageNumber}\n          </a>\n        </li>,\n      );\n    }\n\n    return items;\n  }, [total, perPage, currentPage]);\n\n  const handlePrevClick = (event: MouseEvent) => {\n    event.preventDefault();\n\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextClick = (event: MouseEvent) => {\n    event.preventDefault();\n\n    if (currentPage !== numberOfPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames('page-item', {\n          disabled: currentPage === 1,\n        })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1 ? 'true' : 'false'}\n          onClick={handlePrevClick}\n        >\n          «\n        </a>\n      </li>\n      {pageItems}\n      <li\n        className={classNames('page-item', {\n          disabled: currentPage === numberOfPages,\n        })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === numberOfPages ? 'true' : 'false'}\n          onClick={handleNextClick}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst calculatePaginationInfo = (\n  currentPage: number,\n  firstItem: number,\n  lastItem: number,\n  total: number,\n) => {\n  return `Page ${currentPage} (items ${firstItem} - ${lastItem} of ${total})`;\n};\n\nexport const App: React.FC = () => {\n  const total = 42;\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const firstItem = (currentPage - 1) * perPage + 1;\n  const lastItem = Math.min(currentPage * perPage, total);\n\n  const itemsPerPage = items.slice(firstItem - 1, lastItem);\n\n  const paginationInfo = calculatePaginationInfo(\n    currentPage,\n    firstItem,\n    lastItem,\n    total,\n  );\n\n  const handleChangePerPage = (event: ChangeEvent<HTMLSelectElement>) => {\n    const newPerPage = +event.target.value;\n\n    setPerPage(newPerPage);\n    setCurrentPage(1);\n  };\n\n  const handlePageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {paginationInfo}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleChangePerPage}\n            value={perPage}\n          >\n            <option value={3}>3</option>\n            <option value={5}>5</option>\n            <option value={10}>10</option>\n            <option value={20}>20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n      <ul>\n        {itemsPerPage.map((item) => (\n          <li\n            data-cy=\"item\"\n            key={item}\n          >\n            {`${item}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}